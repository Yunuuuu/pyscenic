% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{run}
\alias{run}
\alias{run.SummarizedExperiment}
\alias{run.seurat}
\alias{run.default}
\title{Pyscenic workflow}
\usage{
run(object, ...)

\method{run}{SummarizedExperiment}(
  object,
  ...,
  count = "counts",
  layers = NULL,
  gene_attrs = NULL,
  cell_attrs = NULL
)

\method{run}{seurat}(
  object,
  ...,
  assay = NULL,
  count = "counts",
  layers = NULL,
  gene_attrs = NULL,
  cell_attrs = NULL
)

\method{run}{default}(
  object,
  tf_list,
  motif2tf,
  motif_ranks,
  ...,
  layers = NULL,
  gene_attrs = NULL,
  cell_attrs = NULL,
  method = NULL,
  mode = NULL,
  pruning = TRUE,
  all_modules = FALSE,
  chunk_size = 100L,
  min_orthologous_identity = 0,
  max_similarity_fdr = 0.001,
  thresholds = c(0.75, 0.9),
  top_n_targets = 50L,
  top_n_regulators = c(5, 10, 50),
  min_genes = 20L,
  mask_dropouts = FALSE,
  weights = FALSE,
  rank_threshold = 5000L,
  auc_threshold = 0.05,
  nes_threshold = 3,
  odir = getwd(),
  loom_ofile = NULL,
  grn_ofile = "grn_adj.csv",
  regulon_ofile = "regulons.csv",
  aucell_ofile = "aucell.loom",
  transpose = FALSE,
  gene_id_atrr = "GeneID",
  cell_id_atrr = "CellID",
  threads = 1L,
  seed = NULL,
  overwrite = FALSE,
  envpath = NULL
)
}
\arguments{
\item{object}{Single cell gene expression counts matrix, (rows=genes x
columns=cells). It's okay to provide a csv or loom file. If provided as a
file, the matrix must be (rows=cells x columns=genes), otherwise, you should
specify the transpose argument.}

\item{...}{Additional arguments passed on to specific methods.
\itemize{
\item \code{default} method: Not used currently.
\item \code{Seurat} or \code{SummarizedExperiment} method: Additional arguments passed to
default method.
}}

\item{count}{A string of assay or layer name for the raw counts.}

\item{layers}{A named list of additional matrices to be added into loom file.
\itemize{
\item \link[SummarizedExperiment:RangedSummarizedExperiment-class]{SummarizedExperiment} methods:
this must be a bool or a character or integer to specify the assay names.
If \code{TRUE}, all \link[SummarizedExperiment:SummarizedExperiment-class]{assays} in
\code{object} will be extracted, If \code{FALSE}, nothing will be extracted into the
loom file.
\item \link[SeuratObject:Seurat-class]{Seurat} method: this must be a bool or a
character to specify the layer name. See
\link[SeuratObject:AssayData]{GetAssayData}.
}}

\item{gene_attrs, cell_attrs}{A named list of attributes added into genes or
cells. For \link[SeuratObject:Seurat-class]{Seurat} or
\link[SummarizedExperiment:RangedSummarizedExperiment-class]{SummarizedExperiment} methods,
this can also be a bool or a character. If \code{TRUE}, all attributes in
gene/cell will be extracted, If \code{FALSE}, nothing will be extracted into the
loom file. If a character, the columns of the gene/cell annotation will be
added into the loom file.}

\item{assay}{Specific assay to get data from. See
\link[SeuratObject:AssayData]{GetAssayData}.}

\item{tf_list}{Transcription factors file (TXT; one TF per line). See
\url{https://resources.aertslab.org/cistarget/tf_lists/}.}

\item{motif2tf}{Motif annotations file. See
\url{https://resources.aertslab.org/cistarget/motif2tf/}.}

\item{motif_ranks}{The regulatory feature databases file. Two file
formats can be supported: feather or db (legacy). See
\url{https://resources.aertslab.org/cistarget/databases/}.}

\item{method}{The algorithm for gene regulatory network reconstruction, one
of \code{"genie3"} or \code{"grnboost2"}. Default: \code{"grnboost2"}.}

\item{mode}{The mode to be used for computing. One of
\code{"custom_multiprocessing"}, \code{"dask_multiprocessing"}, \code{"dask_cluster"}.
Default: \code{"custom_multiprocessing"}.}

\item{pruning}{A boolean value indicates wether perform pruning when finding
enriched motifs. Default: \code{TRUE}.}

\item{all_modules}{A boolean value indicates whether including both positive
and negative regulons in the analysis.}

\item{chunk_size}{The size of the module chunks assigned to a node in the
dask graph (default: \code{100}).}

\item{min_orthologous_identity}{Minimum orthologous identity to use when
annotating enriched motifs (default: \code{0.0}).}

\item{max_similarity_fdr}{Maximum FDR in motif similarity to use when
annotating enriched motifs (default: \code{0.001}).}

\item{thresholds}{The first method to create the TF-modules based on the best
targets for each transcription factor (default: \code{c(0.75, 0.90)}).}

\item{top_n_targets}{The second method is to select the top targets for a
given TF. (default: \code{50})}

\item{top_n_regulators}{The alternative way to create the TF-modules is to
select the best regulators for each gene. (default: \code{c(5, 10, 50)}).}

\item{min_genes}{The minimum number of genes in a module (default: \code{20}).}

\item{mask_dropouts}{A boolean value indicates whether cell dropouts (cells
in which expression of either TF or target gene is 0) are masked when
calculating the correlation between a TF-target pair. This affects which
target genes are included in the initial modules, and the final pruned
regulon (by default only positive regulons are kept (see --all_modules
option)). The default value in pySCENIC 0.9.16 and previous versions was to
mask dropouts when calculating the correlation; however, all cells are now
kept by default, to match the R version.}

\item{weights}{Use weights associated with genes in recovery analysis. Is
only relevant when \code{ctx_ofile} is supplied as json format.}

\item{rank_threshold}{The rank threshold used for deriving the target genes
of an enriched motif (default: \code{5000}).}

\item{auc_threshold}{The threshold used for calculating the AUC of a feature
as fraction of ranked genes (default: \code{0.05}).}

\item{nes_threshold}{The Normalized Enrichment Score (NES) threshold for
finding enriched features (default: \code{3.0}).}

\item{odir}{A string of output directory.}

\item{loom_ofile}{Output file (must end with \code{.loom}) of the counts matrix.
If \code{NULL}, a temporary file will be used and removed when function exit. If
you want to save this file, just specify this argument.}

\item{grn_ofile}{Output file of the TF-target genes (must end with \code{.csv}).}

\item{regulon_ofile}{Output file of the enriched motifs and target genes
(must end with \code{.csv} or \code{.tsv}).}

\item{aucell_ofile}{Output file/stream, a matrix of AUC values (must end with
\code{.loom}). the loom file while contain the original expression matrix and the
calculated AUC values as extra column attributes.}

\item{transpose}{Transpose the expression matrix if counts is supplied as a
csv (rows=genes x columns=cells).}

\item{gene_id_atrr}{The name of the row attribute that specifies the gene
symbols in the loom file.}

\item{cell_id_atrr}{The name of the column attribute that specifies the
identifiers of the cells in the loom file.}

\item{threads}{The number of workers to use. Only valid if using
dask_multiprocessing, custom_multiprocessing or local as mode. (default:
\code{1}).}

\item{seed}{Seed for the expression matrix ranking step. The default is to
use a random seed.}

\item{overwrite}{A boolean value indicates whether overriding the
\code{loom_ofile} or \code{grn_ofile} if they exist. Since both process are
time-consuming.}

\item{envpath}{A character to define the \code{PATH} environment variables.}
}
\description{
Pyscenic workflow
}
\references{
\url{https://github.com/aertslab/pySCENIC}
}
\seealso{
\link[biosys:pyscenic]{pyscenic()}
}
